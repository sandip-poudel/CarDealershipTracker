@startuml
class DealershipManager {
  - Map<String, Dealership> dealerships
  + processAddVehicleCommand(dealerId: String, vehicle: Vehicle): void
  + enableAcquisition(dealerId: String): void
  + disableAcquisition(dealerId: String): void
  + readInventoryFile(file: File): void
  + exportDealershipInventory(dealerId: String, file: File): void
}

class JSONFileHandler {
  + readInventory(file: File): List<Vehicle>
  + writeInventory(vehicles: List<Vehicle>, file: File): void
}

class Dealership {
  - String dealerId
  - boolean isAcquisitionEnabled
  - List<Vehicle> vehicles
  + enableAcquisition(): void
  + disableAcquisition(): void
  + addVehicle(vehicle: Vehicle): boolean
  + exportToJSON(file: File): void
  + showVehicles(): void
}

abstract class Vehicle {
  - String vehicleId
  - String manufacturer
  - String model
  - Date acquisitionDate
  - double price
  - String dealerId
  - Map<String, Object> metadata
  + getMetadata(): Map<String, Object>
  + setMetadata(metadata: Map<String, Object>): void
}

class SUV extends Vehicle
class Sedan extends Vehicle
class Pickup extends Vehicle
class SportsCar extends Vehicle

DealershipManager --> Dealership : manages
DealershipManager --> JSONFileHandler : uses
Dealership "1" *-- "*" Vehicle : contains
Vehicle <|-- SUV
Vehicle <|-- Sedan
Vehicle <|-- Pickup
Vehicle <|-- SportsCar
@enduml

// This code is partially generated by perplexity.ai and was executed in PlantUML.com
